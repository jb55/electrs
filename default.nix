
# Generated by crate2nix 0.4.0 with the command:
#   "generate"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs? import <nixos> { config = {}; },
  lib? pkgs.lib,
  llvmPackages ? pkgs.llvmPackages,
  callPackage? pkgs.callPackage,
  stdenv? pkgs.stdenv,
  buildRustCrate? pkgs.buildRustCrate,
  fetchurl? pkgs.fetchurl,
  fetchCrate? pkgs.fetchCrate,
  # The features to enable for the root_crate or the workspace_members.
  rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = {
    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = buildRustCrateWithFeatures {
      packageId = "electrs 0.6.1 (path+file:///home/jb55/dev/github/romanz/electrs)";
      features = rootFeatures;
    };
  };
  root_crate =
    builtins.trace "root_crate is deprecated since crate2nix 0.4. Please use rootCrate instead." rootCrate.build;
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "electrs" = {
      build = buildRustCrateWithFeatures {
        packageId = "electrs 0.6.1 (path+file:///home/jb55/dev/github/romanz/electrs)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "aho-corasick 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "aho-corasick";
        version = "0.7.3";
        edition = "2015";
        sha256 = "0dn42fbdms4brigqphxrvzbjd1s4knyjlzky30kgvpnrcl4sqqdv";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "memchr" "std" ];
      };
    "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          };
        };
        features = {
        };
      };
    "arc-swap 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arc-swap";
        version = "0.3.11";
        edition = "2015";
        sha256 = "0svh0bj0b89y4vni5pqa37qgwkya3gycjizlwg0bqkq30z5smfpf";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
        ];
        features = {
        };
      };
    "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "argon2rs";
        version = "0.2.5";
        edition = "2015";
        sha256 = "1byl9b3wwyrarn8qack21v5fi2qsnn3y5clvikk2apskhmnih1rw";
        authors = [
          "bryant <bryant@defrag.in>"
        ];
        dependencies = {
          "blake2-rfc" = "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
          "scoped_threadpool" = "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "simd" = [ "blake2-rfc/simd_asm" ];
        };
      };
    "arrayref 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayref";
        version = "0.3.5";
        edition = "2015";
        sha256 = "00dfn9lbr4pc524imc25v3rbmswiqk3jldsgmx4rdngcpxb8ssjf";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];
        features = {
        };
      };
    "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayvec";
        version = "0.4.10";
        edition = "2015";
        sha256 = "0qbh825i59w5wfdysqdkiwbwkrsy7lgbd4pwbyb8pxx8wc36iny8";
        authors = [
          "bluss"
        ];
        dependencies = {
          "nodrop" = {
            packageId = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
    "ascii 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ascii";
        version = "0.8.7";
        edition = "2015";
        sha256 = "1dwcfl0dhcmdf2m85hdkxqdxqaizy3gb0k5p10z2yc1pgma5kwm3";
        authors = [
          "Thomas Bahn <thomas@thomas-bahn.net>"
          "Torbj√∏rn Birch Moltu <t.b.moltu@lyse.net>"
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "atty";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0by1bj2km9jxi4i4g76zzi76fc2rcm9934jpnyrqd95zw344pb20";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "termion" = {
            packageId = "termion 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0dv81dwnp1al3j4ffz007yrjv4w1c7hw09gnf0xs3icxiw6qqfs3";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "backtrace 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace";
        version = "0.3.15";
        edition = "2015";
        sha256 = "0qgbc07aq9kfixv29s60xx666lmdpgmf27a78fwjlhnfzhqvkn0p";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "The Rust Project Developers"
        ];
        dependencies = {
          "backtrace-sys" = {
            packageId = "backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."unix" && (!(target."os" == "fuchsia")) && (!(target."os" == "emscripten")) && (!(target."os" == "macos")) && (!(target."os" == "ios")));
          };
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (target."unix" || (target."env" == "sgx"));
          };
          "rustc-demangle" = "rustc-demangle 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "dbghelp" "processthreadsapi" "winnt" "minwindef" ];
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "coresymbolication" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "gimli" "memmap" "object" ];
          "libbacktrace" = [ "backtrace-sys" "std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "coresymbolication" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
    "backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace-sys";
        version = "0.1.28";
        edition = "2015";
        sha256 = "1bbw8chs0wskxwzz7f3yy7mjqhyqj8lslq8pcjw1rbd2g23c34xl";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "1zz3jq619hahla1f70ra38818b5n8cp4iilij81i90jq6z7hlfhg";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bech32 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bech32";
        version = "0.6.0";
        edition = "2015";
        sha256 = "0bnlc2bg949h3my2kg0ap2l78inipnmf6dc9klxlkjr8a0bfpvr0";
        authors = [
          "Clark Moody"
        ];
        features = {
        };
      };
    "bincode 1.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bincode";
        version = "1.1.3";
        edition = "2015";
        sha256 = "1wx2iz648r6byl523sb2rqizk1qvwrzpf7apjgr8lsnb67p26y1a";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Daniel Griffen"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.91 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bindgen 0.47.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bindgen";
        version = "0.47.3";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "02wqfi2jvljrp8hycjpa1j0xrllvki8dhyrvfafx959pmvlzdh48";
        authors = [
          "Jyun-Yan You <jyyou.tw@gmail.com>"
          "Emilio Cobos √Ålvarez <emilio@crisal.io>"
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "The Servo project developers"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "cexpr" = "cexpr 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "clang-sys" = {
            packageId = "clang-sys 0.26.4 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "runtime" "clang_6_0" ];
          };
          "clap" = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "env_logger" = {
            packageId = "env_logger 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "hashbrown" = "hashbrown 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = {
            packageId = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "peeking_take_while" = "peeking_take_while 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "regex" = "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "which" = "which 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "logging" ];
          "logging" = [ "env_logger" "log" ];
        };
        resolvedDefaultFeatures = [ "default" "env_logger" "log" "logging" ];
      };
    "bitcoin 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitcoin";
        version = "0.18.0";
        edition = "2015";
        sha256 = "13fkh43riqg7fzh791pdnfsbbwq3s83snqy1i7bljbfdq6fjxpw0";
        authors = [
          "Andrew Poelstra <apoelstra@wpsoftware.net>"
        ];
        dependencies = {
          "bitcoin-bech32" = "bitcoin-bech32 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "bitcoin_hashes" = "bitcoin_hashes 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "byteorder" = "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "hex" = "hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.3.23 (registry+https://github.com/rust-lang/crates.io-index)";
          "secp256k1" = {
            packageId = "secp256k1 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "rand" ];
          };
        };
        features = {
          "fuzztarget" = [ "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget" ];
          "serde-decimal" = [ "use-serde" "strason" ];
          "use-serde" = [ "serde" "serde_test" "bitcoin_hashes/serde" ];
        };
      };
    "bitcoin-bech32 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitcoin-bech32";
        version = "0.9.0";
        edition = "2015";
        sha256 = "06h37dlb2f2cvkikdpk0c83yainvw0n7ycjrlyfdq2jzg0sv8hf6";
        authors = [
          "Clark Moody"
        ];
        dependencies = {
          "bech32" = "bech32 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bitcoin_hashes 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitcoin_hashes";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1m73ykj8zqbv4rxl1s1c9dpnk43vadgl00yznsp1fllhgpn5wbdf";
        authors = [
          "Andrew Poelstra <apoelstra@wpsoftware.net>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1g1wmz2001qmfrd37dnd5qiss5njrw26aywmg6yhkmkbyrhjxb08";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "blake2-rfc";
        version = "0.2.18";
        edition = "2015";
        sha256 = "0pyqrik4471ljk16prs0iwb2sam39z0z6axyyjxlqxdmf4wprf0l";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        dependencies = {
          "arrayvec" = {
            packageId = "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "constant_time_eq" = "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.3.1";
        edition = "2015";
        sha256 = "1dd46l7fvmxfq90kh6ip1ghsxzzcdybac8f0mh2jivsdv9vy8k4w";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "cc 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.26";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "0q6pamwpgk9hv65vhv8s9dp5d5wb298rcg2kyzpz3y9kzw0kzhj0";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "rayon" = {
            packageId = "rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "parallel" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "parallel" "rayon" ];
      };
    "cexpr 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cexpr";
        version = "0.3.5";
        edition = "2015";
        sha256 = "1aianwjm81d0k23aam5wpj1gzjild6wqq8qbkyjhd5qvrxz5z18p";
        authors = [
          "Jethro Beekman <jethro@jbeekman.nl>"
        ];
        dependencies = {
          "nom" = {
            packageId = "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "verbose-errors" ];
          };
        };
        features = {
        };
      };
    "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.7";
        edition = "2015";
        sha256 = "13gvcx1dxjq4mpmpj26hpg3yc97qffkx2zi58ykr1dwr8q2biiig";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "chrono";
        version = "0.4.6";
        edition = "2015";
        sha256 = "0cxgqgf4lknsii1k806dpmzapi2zccjpa350ns5wpb568mij096x";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = {
          "num-integer" = {
            packageId = "num-integer 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "num-traits" = {
            packageId = "num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "time" = {
            packageId = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "clock" = [ "time" ];
          "default" = [ "clock" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "time" ];
      };
    "chunked_transfer 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "chunked_transfer";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0bgk8axxlaawwqapm52r12lqiqj97qdl2wjn78w7x7x6lm76si3j";
        authors = [
          "Corey Farwell <coreyf@rwell.org>"
        ];
        features = {
        };
      };
    "clang-sys 0.26.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clang-sys";
        version = "0.26.4";
        edition = "2015";
        sha256 = "097hhblr4yhkj22i5zjc635mmqp3vfz1jbrsv4nc061ws1nz4brx";
        authors = [
          "Kyle Mayes <kyle@mayeses.com>"
        ];
        dependencies = {
          "glob" = "glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "libloading" = {
            packageId = "libloading 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        buildDependencies = {
          "glob" = "glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "clang_3_6" = [ "gte_clang_3_6" ];
          "clang_3_7" = [ "gte_clang_3_6" "gte_clang_3_7" ];
          "clang_3_8" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" ];
          "clang_3_9" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" ];
          "clang_4_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" ];
          "clang_5_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" ];
          "clang_6_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" ];
          "clang_7_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" "gte_clang_7_0" ];
          "runtime" = [ "libloading" ];
        };
        resolvedDefaultFeatures = [ "clang_6_0" "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" "libloading" "runtime" ];
      };
    "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "054n9ngh6pkknpmd4acgdsp40iw6f5jzq8a4h2b76gnbvk6p5xjh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = {
          "ansi_term" = {
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (!target."windows");
          };
          "atty" = {
            packageId = "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "bitflags" = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "strsim" = {
            packageId = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "textwrap" = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "vec_map" = {
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = {
          "bitflags" = {
            packageId = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "constant_time_eq";
        version = "0.1.3";
        edition = "2015";
        sha256 = "03qri9hjf049gwqg9q527lybpg918q6y5q4g9a5lma753nff49wd";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        features = {
        };
      };
    "crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-channel";
        version = "0.3.8";
        edition = "2015";
        sha256 = "0apm8why2qsgr8ykh9x677kc9ml7qp71mvirfkdzdn4c1jyqyyzm";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-utils" = "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "smallvec" = "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-deque";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1h3n1p1qy45b6388j3svfy1m72xlcx9j9a5y0mww6jz8fmknipnb";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-epoch" = "crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-epoch";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1ljrrpvalabi3r2nnpcz7rqkbl2ydmd0mrrr2fv335f7d46xgfxa";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "arrayvec" = {
            packageId = "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = {
            packageId = "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memoffset" = "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "nodrop" = {
            packageId = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "scopeguard" = {
            packageId = "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "use_std" ];
          "nightly" = [ "arrayvec/use_union" ];
          "use_std" = [ "lazy_static" "crossbeam-utils/use_std" ];
        };
        resolvedDefaultFeatures = [ "crossbeam-utils" "default" "lazy_static" "use_std" ];
      };
    "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1z7wgcl9d22r2x6769r5945rnwf3jqfrrmb16q7kzk292r1d4rdg";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "dirs";
        version = "1.0.5";
        edition = "2015";
        sha256 = "1py68zwwrhlj5vbz9f9ansjmhc8y4gs5bpamw9ycmqz030pprwf3";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_users" = {
            packageId = "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          };
        };
        features = {
        };
      };
    "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "either";
        version = "1.5.2";
        edition = "2015";
        sha256 = "1zqq1057c51f53ga4p9l4dd8ax6md27h1xjrjp2plkvml5iymks5";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "electrs 0.6.1 (path+file:///home/jb55/dev/github/romanz/electrs)"
      = rec {
        crateName = "electrs";
        version = "0.6.1";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./.);
        authors = [
          "Roman Zeyde <me@romanzey.de>"
        ];
        dependencies = {
          "arrayref" = "arrayref 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "base64" = "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "bincode" = "bincode 1.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "bitcoin" = "bitcoin 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "bitcoin_hashes" = "bitcoin_hashes 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "clap" = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-channel" = "crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "dirs" = "dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "error-chain" = "error-chain 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "glob" = "glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "hex" = "hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "lru" = "lru 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "page_size" = "page_size 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "prometheus" = "prometheus 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rocksdb" = "rocksdb 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rust-crypto" = "rust-crypto 0.2.36 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.91 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_derive" = "serde_derive 1.0.91 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_json" = "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)";
          "signal-hook" = "signal-hook 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "stderrlog" = "stderrlog 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "sysconf" = "sysconf 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "time" = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
          "tiny_http" = "tiny_http 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "env_logger 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "env_logger";
        version = "0.6.1";
        edition = "2015";
        sha256 = "1d02i2yaqpnmbgw42pf0hd56ddd9jr4zq5yypbmfvc8rs13x0jql";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "atty" = {
            packageId = "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "humantime" = {
            packageId = "humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "log" = {
            packageId = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "regex" = {
            packageId = "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "termcolor" = {
            packageId = "termcolor 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
    "errno 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "errno";
        version = "0.2.4";
        edition = "2015";
        sha256 = "145rd8ccjsj99hxkw9g9gnak56qqxlq85hqyj35wba6j2ibxbwy2";
        authors = [
          "Chris Wong <lambda.fairy@gmail.com>"
        ];
        dependencies = {
          "errno-dragonfly" = {
            packageId = "errno-dragonfly 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "dragonfly");
          };
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "errhandlingapi" "minwindef" "ntdef" "winbase" ];
          };
        };
        features = {
        };
      };
    "errno-dragonfly 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "errno-dragonfly";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1bpnr0z3bl2zxnm7syqbgmxsj18qm8l4s1jxr7czpbhdqhgfgvcf";
        authors = [
          "Michael Neumann <mneumann@ntecs.de>"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "gcc" = "gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "error-chain 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "error-chain";
        version = "0.12.1";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "1lgs40xn50p0n4yqyryv9gzpvjw7sg355vjqcqmn5ai84rmh14m7";
        authors = [
          "Brian Anderson <banderson@mozilla.com>"
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
          "Yamakaky <yamakaky@yamaworld.fr>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        buildDependencies = {
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "backtrace" "example_generated" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "example_generated" ];
      };
    "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1msaj1c0fg12dzyf4fhxqlx1gfx41lj2smdjmkc9hkrgajk2g3kx";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "failure_derive" = {
            packageId = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
    "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure_derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1wzk484b87r4qszcvdl2bkniv5ls4r2f2dshz7hmgiv6z4ln12g0";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.34 (registry+https://github.com/rust-lang/crates.io-index)";
          "synstructure" = "synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "07apwv9dj716yjlcj29p94vkqn5zmfh7hlrqvrjx3wzshphc95h9";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        features = {
        };
      };
    "gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "gcc";
        version = "0.3.55";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "18qxv3hjdhp7pfcvbm2hvyicpgmk7xw8aii1l7fla8cxxbcrg2nz";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "rayon" ];
        };
      };
    "glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "glob";
        version = "0.2.11";
        edition = "2015";
        sha256 = "104389jjxs8r2f5cc9p0axhjmndgln60ih5x4f00ccgg9d3zarlf";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
      };
    "glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1b3dc2686xnrpxwx4nd3w06f9qs433w6xmmzq6jb76hh95dwwqb2";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
      };
    "hashbrown 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hashbrown";
        version = "0.1.8";
        edition = "2015";
        sha256 = "047fk80pg59cdn5lz4h2a514fmgmya896dvy3dqqviia52a27fzh";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "byteorder" = {
            packageId = "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "scopeguard" = {
            packageId = "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hex";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0hs0xfb4x67y4ss9mmbjmibkwakbn3xf23i21m409bw2zqk9b6kz";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
        };
      };
    "humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "humantime";
        version = "1.2.0";
        edition = "2015";
        sha256 = "0wlcxzz2mhq0brkfbjb12hc6jm17bgm8m6pdgblw4qjwmf26aw28";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = {
          "quick-error" = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1gwgl19rz5vzi67rrhamczhxy050f5ynx4ybabfapyalv7z1qmjy";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-bidi" = "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-normalization" = "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "1fqc34xzzl2spfdawxd9awhzl0fwf1y6y4i94l8bq8rfrzd90awl";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi" = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "winapi-build" = "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1vv47va18ydk7dx5paz88g3jy1d3lwbx6qpxkbj8gyfv770i4b1y";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.54";
        edition = "2015";
        sha256 = "11nrsbpmwcnfrjcds0wnicwwql3809nq6q6z00q920bdpryyaf58";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "use_std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "libloading 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libloading";
        version = "0.5.0";
        edition = "2015";
        sha256 = "11vzjaka1y979aril4ggwp33p35yz2isvx9m5w88r5sdcmq6iscn";
        authors = [
          "Simonas Kazlauskas <libloading@kazlauskas.me>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "winerror" "errhandlingapi" "libloaderapi" ];
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "librocksdb-sys 5.18.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "librocksdb-sys";
        version = "5.18.3";
        edition = "2015";
        sha256 = "1ldrcdgdw4yzf4gac5xlcn956llc1qrqpn46ph891y0b537683cb";

        enableParallelBuilding = true;
        buildInputs = [ pkgs.clang ];
        LIBCLANG_PATH = "${llvmPackages.libclang}/lib";

        authors = [
          "Karl Hobley <karlhobley10@gmail.com>"
          "Arkadiy Paronyan <arkadiy@ethcore.io>"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "bindgen" = "bindgen 0.47.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "cc" = {
            packageId = "cc 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "parallel" ];
          };
          "glob" = "glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "static" ];
        };
        resolvedDefaultFeatures = [ "bzip2" "default" "lz4" "snappy" "static" "zlib" ];
      };
    "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.6";
        edition = "2015";
        sha256 = "1nd8dl9mvc9vd6fks5d4gsxaz990xi6rzlb8ymllshmwi153vngr";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "lru 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lru";
        version = "0.1.15";
        edition = "2015";
        sha256 = "1gm19dgpzxbhgbsgzd2c7k4j6a50f9d7bda9qpcflpdzdmpqsq53";
        authors = [
          "Jerome Froelich <jeromefroelic@hotmail.com>"
        ];
        dependencies = {
          "hashbrown" = "hashbrown 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "nightly" = [ "hashbrown/nightly" ];
        };
      };
    "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "03hl636fg6xggy0a26200xs74amk3k9n0908rga2szn68agyz3cv";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
    "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memchr";
        version = "2.2.0";
        edition = "2015";
        sha256 = "11vwg8iig9jyjxq3n1cq15g29ikzw5l7ar87md54k1aisjs0997p";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memoffset";
        version = "0.2.1";
        edition = "2015";
        sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        features = {
        };
      };
    "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nodrop";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0gkfx6wihr9z0m8nbdhma5pyvbipznjpkzny2d4zkc05b0vnhinb";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
    "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "0rg7n0nif70052wlaffmgxmmlvi6xm7zpqmzfq9d8wr9376lpn2h";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "memchr" "std" "verbose-errors" ];
      };
    "num-integer 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-integer";
        version = "0.1.39";
        edition = "2015";
        sha256 = "1f42ls46cghs13qfzgbd7syib2zc6m7hlmv1qlar6c9mdxapvvbg";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
      };
    "num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-traits";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1d20sil9n0wgznd1nycm3yjfj1mzyl41ambb7by1apxlyiil1azk";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
    "num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.10.0";
        edition = "2015";
        sha256 = "1411jyxy1wd8d59mv7cf6ynkvvar92czmwhb9l2c1brdkxbbiqn7";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "numtoa";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i2wxr96bb1rvax15z843126z3bnl2frpx69vxsp95r96wr24j08";
        authors = [
          "Michael Aaron Murphy <mmstickman@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "page_size 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "page_size";
        version = "0.4.1";
        edition = "2015";
        sha256 = "0srjgmjhdj2l93p0dcamm3xq3mfpdi89flb24x6xb3r09fqfi0m8";
        authors = [
          "Philip Woods <elzairthesorcerer@gmail.com>"
        ];
        dependencies = {
          "kernel32-sys" = {
            packageId = "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
          "no_std" = [ "spin" ];
        };
      };
    "peeking_take_while 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "peeking_take_while";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1vdaxp3c73divj5rbyb2wm9pz61rg5idgh1g7bifnllf7xhw15zr";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
        };
      };
    "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        features = {
        };
      };
    "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0iifv51wrm6r4r2gghw6rray3nv53zcap355bbz1nsmbhj5s09b9";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "prometheus 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "prometheus";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1yvwsq6w7zd6wb5nf7pfrb0p9vp81rdcz0hndczrnzpa9ji2c9k6";
        authors = [
          "overvenus@gmail.com"
          "siddontang@gmail.com"
          "vistaswx@gmail.com"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "fnv" = "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "protobuf" = "protobuf 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "quick-error" = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "spin" = {
            packageId = "spin 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "gen" = [ "protobuf-codegen-pure" ];
          "nightly" = [ "libc" "spin/unstable" ];
          "process" = [ "libc" "procinfo" ];
          "push" = [ "reqwest" "libc" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "protobuf 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "protobuf";
        version = "2.5.0";
        edition = "2015";
        sha256 = "0sy9l0lrdcszl0v5h3p8pkiif58qvh7cjp79fcnq339xbkz6p63y";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
        ];
        features = {
          "with-bytes" = [ "bytes" ];
          "with-serde" = [ "serde" "serde_derive" ];
        };
      };
    "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quick-error";
        version = "1.2.2";
        edition = "2015";
        sha256 = "192a3adc5phgpibgqblsdx1b421l5yg9bjbmv552qqq9f37h60k5";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        features = {
        };
      };
    "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "0.6.12";
        edition = "2015";
        sha256 = "1ckd2d2sy0hrwrqcr47dn0n3hyh7ygpc026l8xaycccyg27mihv9";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" "proc-macro2" ];
      };
    "rand 0.3.23 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.3.23";
        edition = "2015";
        sha256 = "118rairvv46npqqx7hmkf97kkimjrry9z31z4inxcv2vn0nj1s2g";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "nightly" = [ "i128_support" ];
        };
      };
    "rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.4.6";
        edition = "2015";
        sha256 = "0c3rmg5q7d6qdi7cbmg5py9alm70wd3xsg0mmcawrnl35qv37zfs";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (target."env" == "sgx");
          };
          "rdrand" = {
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "sgx");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        features = {
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "std" = [ "libc" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "std" ];
      };
    "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0q0ssgpj9x5a6fda83nhmfydy7a6c0wvxm0jhncsmjx8qp8gw91m";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
    "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0wb5iwhffibj0pnpznhv1g3i7h1fnhz64s3nz74fz6vsm3q6q3br";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0ywwspizgs9g8vzn6m5ix9yg36n15119d6n792h7mk4r5vs0ww4j";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "cloudabi");
          };
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "rdrand" = {
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "sgx");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          };
        };
        features = {
        };
      };
    "rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon";
        version = "1.0.3";
        edition = "2015";
        sha256 = "0bmwk0l5nbx20a5x16dhrgrmkh3m40v6i0qs2gi2iqimlszyhq93";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "either" = {
            packageId = "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rayon-core" = "rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon-core";
        version = "1.4.1";
        edition = "2015";
        sha256 = "01xf3mwmmji7yaarrpzpqjhz928ajxkwmjczbwmnpy39y95m4fbn";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "15hrcasn0v876wpkwab1dwbk9kvqwrb3iv4y4dibb6yxnfvzwajk";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.54";
        edition = "2015";
        sha256 = "1ndcp7brnvii87ndcd34fk846498r07iznphkslcy0shic9cp4rr";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_termios";
        version = "0.1.1";
        edition = "2015";
        sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "redox_syscall" = "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_users";
        version = "0.3.0";
        edition = "2015";
        sha256 = "051rzqgk5hn7rf24nwgbb32zfdn8qp2kwqvdp0772ia85p737p4j";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = {
          "argon2rs" = {
            packageId = "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_os" = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex";
        version = "1.1.6";
        edition = "2015";
        sha256 = "1yynvabg03m5f65qxcw70qckkfjwi9xyfpjdp6yq7pk0xf0ydc0b";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "aho-corasick" = "aho-corasick 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "memchr" = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex-syntax" = "regex-syntax 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "thread_local" = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "utf8-ranges" = "utf8-ranges 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "use_std" ];
          "unstable" = [ "pattern" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "regex-syntax 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex-syntax";
        version = "0.6.6";
        edition = "2015";
        sha256 = "1cjrdc3affa3rjfaxkp91xnf9k0fsqn9z4xqc280vv39nvrl8p8b";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "ucd-util" = "ucd-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rocksdb 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rocksdb";
        version = "0.12.2";
        edition = "2015";
        sha256 = "0mmjbc6frr54wnlhx3pgh44nbj4vskbsvk6kkwh9jm9wxah2ifcw";
        authors = [
          "Tyler Neely <t@jujit.su>"
          "David Greenberg <dsg123456789@gmail.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "librocksdb-sys" = "librocksdb-sys 5.18.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "bzip2" = [ "librocksdb-sys/bzip2" ];
          "default" = [ "snappy" "zstd" "zlib" "bzip2" ];
          "lz4" = [ "librocksdb-sys/lz4" ];
          "snappy" = [ "librocksdb-sys/snappy" ];
          "zlib" = [ "librocksdb-sys/zlib" ];
          "zstd" = [ "librocksdb-sys/zstd" ];
        };
        resolvedDefaultFeatures = [ "bzip2" "default" "librocksdb-sys" "lz4" "snappy" "zlib" "zstd" ];
      };
    "rust-crypto 0.2.36 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rust-crypto";
        version = "0.2.36";
        edition = "2015";
        sha256 = "1hm79xjmkyl20bx4b8ns77xbrm8wqklhqnci54n93zr6wiq3ddgi";
        libName = "crypto";
        authors = [
          "The Rust-Crypto Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.3.23 (registry+https://github.com/rust-lang/crates.io-index)";
          "rustc-serialize" = "rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)";
          "time" = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "gcc" = "gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rustc-demangle 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-demangle";
        version = "0.1.14";
        edition = "2015";
        sha256 = "07vl0ms3a27fpry9kh9piv08w7d51i5m7bgphk7pw4jygwzdy31f";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-serialize";
        version = "0.3.24";
        edition = "2015";
        sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
      };
    "ryu 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ryu";
        version = "0.2.8";
        edition = "2015";
        sha256 = "1qd0ni13w19a97y51vm31biyh2pvz8j9gi78rn5in912mi04xcnk";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scoped_threadpool";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1arqj2skcfr46s1lcyvnlmfr5456kg5nhn8k90xyfjnxkp5yga2v";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        features = {
        };
      };
    "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scopeguard";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "secp256k1 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "secp256k1";
        version = "0.12.2";
        edition = "2015";
        sha256 = "0x59m7zj4df4cyqj15dk73sv1n2naqpnb0qwy00n51mckd3h41q5";
        authors = [
          "Dawid Ciƒô≈ºarkiewicz <dpc@ucore.info>"
          "Andrew Poelstra <apoelstra@wpsoftware.net>"
        ];
        dependencies = {
          "rand" = {
            packageId = "rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" "rand" ];
      };
    "serde 1.0.91 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde";
        version = "1.0.91";
        edition = "2015";
        sha256 = "0pv2awcqq2y99hw15nsrkghzlcar8i5wg77w636zg9d10n6db5gf";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "serde_derive 1.0.91 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_derive";
        version = "1.0.91";
        edition = "2015";
        sha256 = "112w47k0b51ixd5cfn265sghs3hddh2h8vr175s23dgacnc8nxqb";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.34 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_json";
        version = "1.0.39";
        edition = "2015";
        sha256 = "07ydv06hn8x0yl0rc94l2wl9r2xz1fqd97n1s6j3bgdc6gw406a8";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "itoa" = "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "ryu" = "ryu 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.91 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "signal-hook 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "signal-hook";
        version = "0.1.9";
        edition = "2015";
        sha256 = "090cx7fyrqllvhvxxy5343j4r21i98cs2id63jp7a59yk8d29xsi";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "signal-hook-registry" = "signal-hook-registry 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "mio-support" = [ "mio" "mio-uds" ];
          "tokio-support" = [ "futures" "mio-support" "tokio-reactor" ];
        };
      };
    "signal-hook-registry 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "signal-hook-registry";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0mz2nkfn203k7y1k28prgnzq0y93hp9d6n9vywywi8dpb2nrplpi";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
        ];
        dependencies = {
          "arc-swap" = "arc-swap 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "smallvec";
        version = "0.6.9";
        edition = "2015";
        sha256 = "0p96l51a2pq5y0vn48nhbm6qslbc6k8h28cxm0pmzkqmj7xynz6w";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "spin 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "spin";
        version = "0.4.10";
        edition = "2015";
        sha256 = "0gaxd3pialj8pq6b2xm4sqhgmxmhblz9ki2bmjjrfmzr3qhpa1l5";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <John_Ericson@Yahoo.com>"
        ];
        features = {
          "default" = [ "unstable" ];
          "unstable" = [ "const_fn" "once" ];
        };
      };
    "stderrlog 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "stderrlog";
        version = "0.4.1";
        edition = "2015";
        sha256 = "03i5f9v9ys4lrz9yjjv2qh5ahn37pvdakan75vvq4qlb10slmli8";
        authors = [
          "Doug Goldstein <cardoe@cardoe.com>"
        ];
        dependencies = {
          "chrono" = "chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = {
            packageId = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "termcolor" = "termcolor 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "thread_local" = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0d3jsdz22wgjyxdakqnvdgmwjdvkximz50d9zfk4qlalw635qcvy";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        features = {
        };
      };
    "syn 0.15.34 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "0.15.34";
        edition = "2015";
        sha256 = "15vmpadp8qyrri6p1mp2z59dbapwds1r2z51v8nzpf3b9c6xvzpf";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "parsing" "printing" "proc-macro" "proc-macro2" "quote" "visit" ];
      };
    "synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "synstructure";
        version = "0.10.1";
        edition = "2015";
        sha256 = "0mx2vwd0d0f7hanz15nkp0ikkfjsx9rfkph7pynxyfbj45ank4g3";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.34 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" "extra-traits" ];
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "sysconf 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "sysconf";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0yv6mpgqngpyjshknq4v5mxmckgakq45cij37a476vpmgbsnyvkf";
        authors = [
          "Gary M. Josack <gary@byoteki.com>, Joshua Liebow-Feeser <hello@joshlf.com>"
        ];
        dependencies = {
          "errno" = "errno 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "kernel32-sys" = "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "winapi" = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "nightly" = [ "lazy_static" ];
        };
      };
    "termcolor 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termcolor";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0w609sa1apl1kii67ln2g82r4rrycw45zgjq7mxxjrx1fa21v05z";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "wincolor" = {
            packageId = "wincolor 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "termcolor 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termcolor";
        version = "1.0.4";
        edition = "2015";
        sha256 = "0xydrjc0bxg08llcbcmkka29szdrfklk4vh6l6mdd67ajifqw1mv";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "wincolor" = {
            packageId = "wincolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "termion 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termion";
        version = "1.5.2";
        edition = "2015";
        sha256 = "0a8znl9hdnr9d21xskb2q77r6pkvrabh71b43371vy9wq97m78d9";
        authors = [
          "ticki <Ticki@users.noreply.github.com>"
          "gycos <alexandre.bury@gmail.com>"
          "IGI-111 <igi-111@protonmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "redox"));
          };
          "numtoa" = {
            packageId = "numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "redox_termios" = {
            packageId = "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
        };
        features = {
        };
      };
    "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0s25qh49n7kjayrdj4q3v0jk0jc6vy88rdw0bvgfxqlscpqpxi7d";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = {
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "02rksdwjmz2pw9bmgbb4c0bgkbq5z6nvg510sq1s6y2j1gam0c7i";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "1ny809kmdjwd4b478ipc33dz7q6nq7rxk766x8cnrg6zygcksmmx";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          };
        };
        features = {
        };
      };
    "tiny_http 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tiny_http";
        version = "0.6.2";
        edition = "2015";
        sha256 = "08ws5kzqfd6f8313085ywp5x2s25w6hshy2y9sd656i7vbdpplha";
        authors = [
          "pierre.krieger1708@gmail.com"
          "Corey Farwell <coreyf@rwell.org>"
        ];
        dependencies = {
          "ascii" = "ascii 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "chrono" = "chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "chunked_transfer" = "chunked_transfer 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "url" = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "ssl" = [ "openssl" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "ucd-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ucd-util";
        version = "0.1.3";
        edition = "2015";
        sha256 = "1n1qi3jywq5syq90z9qd8qzbn58pcjgv1sx4sdmipm4jf9zanz15";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
        };
      };
    "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-normalization";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1pb26i2xd5zz0icabyqahikpca0iwj2jd4145pczc4bb7p641dsz";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = {
          "smallvec" = "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0qzrjzd9r1niv7037x4cgnv98fs1vj0k18lpxx890ipc47x5gc09";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "idna" = "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "percent-encoding" = "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
    "utf8-ranges 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "utf8-ranges";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1my02laqsgnd8ib4dvjgd4rilprqjad6pb9jj9vi67csi5qs2281";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
        };
      };
    "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagav√≠a <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "F√©lix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
    "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1yrx9xblmwbafw2firxyqbj8f771kkzfd24n3q7xgwiqyhi0y8qd";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        features = {
        };
      };
    "which 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "which";
        version = "2.0.1";
        edition = "2015";
        sha256 = "0lj0v21zriscaq5p7rb1r0j34z5yspjvwnldklbr45pxdp9zbgh7";
        authors = [
          "Harry Fei <tiziyuanfang@gmail.com>"
        ];
        dependencies = {
          "failure" = {
            packageId = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.7";
        edition = "2015";
        sha256 = "1k51gfkp0zqw7nj07y443mscs46icmdhld442s2073niap0kkdr8";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "consoleapi" "dbghelp" "errhandlingapi" "fileapi" "knownfolders" "libloaderapi" "minwinbase" "minwindef" "ntdef" "ntsecapi" "objbase" "processenv" "processthreadsapi" "profileapi" "shlobj" "std" "sysinfoapi" "timezoneapi" "winbase" "wincon" "winerror" "winnt" ];
      };
    "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-util";
        version = "0.1.2";
        edition = "2015";
        sha256 = "07jj7rg7nndd7bqhjin1xphbv8kb5clvhzpqpxkvm3wl84r3mj1h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          };
        };
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "wincolor 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wincolor";
        version = "0.1.6";
        edition = "2015";
        sha256 = "0f8m3l86pw6qi31jidqj78pgd15xj914850lyvsxkbln4f1drv47";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "consoleapi" "minwindef" "processenv" "winbase" "wincon" ];
          };
        };
        features = {
        };
      };
    "wincolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wincolor";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0gr7v4krmjba7yq16071rfacz42qbapas7mxk5nphjwb042a8gvz";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "minwindef" "wincon" ];
          };
          "winapi-util" = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {packageId, features}:
    lib.makeOverridable
      ({features}: buildRustCrateWithFeaturesImpl {inherit packageId features;})
      { inherit features; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeaturesImpl = { crateConfigs? crates, packageId, features } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId]} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.elem depName features))
      dependencies;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
